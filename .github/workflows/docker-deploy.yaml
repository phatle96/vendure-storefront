name: VPS Local Build and Deploy

on:
  push:
    tags:
      - "v[0-9]+\\.[0-9]+\\.[0-9]+-staging"
      - "v[0-9]+\\.[0-9]+\\.[0-9]+-production"
      - "v[0-9]+\\.[0-9]+\\.[0-9]+-local"
  workflow_dispatch:

jobs:
  deploy-ubuntu:
    if: ${{ contains(github.ref, '-production') || contains(github.ref, '-staging') }}
    runs-on: ubuntu-latest
    environment: ${{ contains(github.ref, '-production') && 'production' || contains(github.ref, '-staging') && 'staging' }}

    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4

      - name: 2. Set environment based on branch
        id: env_branch
        run: |
          if [[ "${GITHUB_REF}" == "refs/tags/v"* ]]; then
            if [[ "${GITHUB_REF}" == *"-production" ]]; then
              echo "environment=production" >> $GITHUB_ENV
            elif [[ "${GITHUB_REF}" == *"-staging" ]]; then
              echo "environment=staging" >> $GITHUB_ENV
            else
              echo "Unknown environment, exiting."
              exit 1
            fi
          else
            echo "Not a version tag, exiting."
            exit 1
          fi
        shell: bash

      - name: 3. Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_PRIVATE_KEY }}

      - name: 4. Pull the latest code
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            cd ${{ vars.VPS_PATH }} &&
            git fetch &&
            git checkout ${{ github.ref_name == 'main' && 'main' || 'staging' }} &&
            git pull origin ${{ github.ref_name == 'main' && 'main' || 'staging' }} 
          "

      - name: 5. Create .env file on VPS
        env:
          APP_ENV: ${{ secrets.APP_ENV }}
          API_HOST: ${{ secrets.API_HOST }}
          API_PORT: ${{ secrets.API_PORT }}
          SHOP_API_PATH: ${{ secrets.SHOP_API_PATH }}
          BASE_HREF: ${{ secrets.BASE_HREF }}
          TOKEN_METHOD: ${{ secrets.TOKEN_METHOD }}
          NOVU_APP_IDENTIFIER: ${{ secrets.NOVU_APP_IDENTIFIER }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          VAPID: ${{ secrets.VAPID }}
          PUSH_PROVIDER_IDENTIFIER: ${{ secrets.PUSH_PROVIDER_IDENTIFIER }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            echo 'APP_ENV=${APP_ENV}' > ${{ vars.VPS_PATH }}/.env &&
            echo 'API_HOST=${API_HOST}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'API_PORT=${API_PORT}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'SHOP_API_PATH=${SHOP_API_PATH}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'BASE_HREF=${BASE_HREF}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'TOKEN_METHOD=${TOKEN_METHOD}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'NOVU_APP_IDENTIFIER=${NOVU_APP_IDENTIFIER}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'FIREBASE_API_KEY=${FIREBASE_API_KEY}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'FIREBASE_APP_ID=${FIREBASE_APP_ID}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'FIREBASE_MEASUREMENT_ID=${FIREBASE_MEASUREMENT_ID}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'VAPID=${VAPID}' >> ${{ vars.VPS_PATH }}/.env &&
            echo 'PUSH_PROVIDER_IDENTIFIER=${PUSH_PROVIDER_IDENTIFIER}' >> ${{ vars.VPS_PATH }}/.env
          "


      - name: 6. Build the app
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            cd ${{ vars.VPS_PATH }} &&
            npm install --omit=dev --force &&
            npm run build
          "
